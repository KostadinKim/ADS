A
#include <iostream>
using namespace std;
int main()
{
    int n, x;
    cin >> n;
    int a[n];
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i];
    }
    cin >> x;
    for (int i = 1; i <= n; i++)
    {
        if (a[i] == x)
        {
            cout << i << " ";
        }
    }

    return 0;
}





B
#include <iostream>
using namespace std;
int main()
{
    int n;
    cin >> n;
    int a[n];
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
    }
    int max = -1000000000;
    for (int i = 0; i < n; i++)
    {
        if (a[i] > max)
        {
            max = a[i];
        }
    }
    cout << max;
}








C 
#include <iostream>
using namespace std;
int main()
{
    int n;
    cin >> n;
    int a[n];
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i];
    }
    int max = -1000000000;
    for (int i = 1; i <= n; i++)
    {
        if (a[i] > max)
        {
            max = a[i];
        }
    }
    for (int i = 1; i <= n; i++)
    {
        if (max == a[i])
        {
            cout << i << " ";
            break;
        }
    }
}







D ---------------------- 







E
#include <iostream>
#include <vector>
using namespace std;

int main()
{
    int n;
    cin >> n;
    vector<int> v(n);
    int max = -1;
    int sec_max = -1;
    for (int i = 0; i < n; i++)
    {
        cin >> v[i];
    }

    for (int i = 0; i < n; i++)
    {
        if (v[i] > max)
        {
            sec_max = max;
            max = v[i];
        }
        else if (v[i] > sec_max && v[i] != max)
        {
            sec_max = v[i];
        }
    }
    cout << sec_max;
}


















F --------------------------------- 1 IS NOT CORRECT IN INFORMATICS FROM 10
#include <iostream>
#include <vector>
#include <sstream>
using namespace std;
int main()
{
    vector<int> v;
    string s;
    getline(cin, s);
    istringstream os(s);
    int i;
    while (os >> i)
    {
        v.push_back(i);
    }

    int max = -2;
    int sec_max = -1;
    int min = v[0];
    for (int i = 0; i < v.size(); i++)
    {
        if (v[i] < min)
        {
            min = v[i];
        }
        if (v[i] > max)
        {
            sec_max = max;
            max = v[i];
        }
        else if (v[i] > sec_max && v[i] != max)
        {
            sec_max = v[i];
        }
    }
    for (int i = 0; i < v.size(); i++)
    {
        if (v[i] == max)
        {
            v[i] = 0;
        }
        else if (v[i] == sec_max)
        {
            v[i] = min;
        }
    }
    for (int i = 0; i < v.size(); i++)
    {
        if (v[i] != 0)
        {

            cout << v[i] << " ";
        }
    }
}





















G 
#include <iostream>
#include <vector>
using namespace std;
int leftbound(vector<int> &a, int n, int k)
{
    int l = 0;
    int r = n - 1;

    while (l < r)
    {
        int m = (l + r) / 2;
        if (a[m] < k)
        {
            l = m + 1;
        }
        else
        {
            r = m;
        }
    }
    return l;
}
int rightbound(vector<int> &b, int n, int k)
{
    int l = 0;
    int r = n - 1;

    while (l < r)
    {
        int m = (l + r + 1) / 2;
        if (b[m] <= k)
        {
            l = m;
        }
        else
        {
            r = m - 1;
        }
    }
    return l;
}
int main()
{
    int n, m;
    cin >> n >> m;
    vector<int> a(n), b(m);
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
    }
    for (int i = 0; i < m; i++)
    {
        cin >> b[i];
    }
    for (int i = 0; i < m; i++)
    {
        int k = b[i];
        int left = leftbound(a, n, k), right = rightbound(a, n, k);
        if (a[left] == k || a[right] == k)
        {
            cout << "YES" << endl;
        }
        else
        {
            cout << "NO" << endl;
        }
    }
}











I 
#include <iostream>
#include <vector>
using namespace std;
int leftbound(vector<int> &a, int n, int k)
{
    int l = 0;
    int r = n - 1;

    while (l < r)
    {
        int m = (l + r) / 2;
        if (a[m] < k)
        {
            l = m + 1;
        }
        else
        {
            r = m;
        }
    }
    return l;
}
int rightbound(vector<int> &b, int n, int k)
{
    int l = 0;
    int r = n - 1;

    while (l < r)
    {
        int m = (l + r + 1) / 2;
        if (b[m] <= k)
        {
            l = m;
        }
        else
        {
            r = m - 1;
        }
    }
    return l;
}
int main()
{
    int n, m;
    cin >> n >> m;
    vector<int> a(n), b(m);
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
    }
    for (int i = 0; i < m; i++)
    {
        cin >> b[i];
    }
    for (int i = 0; i < m; i++)
    {
        int k = b[i];
        int left = leftbound(a, n, k);
        int right = rightbound(a, n, k);
        if (a[left] == k)
        {
            cout << left + 1 << " ";
        }
        if (a[right] == k)
        {
            cout << right + 1 << " " << endl;
        }

        if (a[left] != k || a[right] != k)
        {
            cout << 0 << endl;
        }
    }
}